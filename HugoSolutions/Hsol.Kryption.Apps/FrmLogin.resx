<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAALEAAACxAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA97RkPfa1ZM72tWT09rVkwfa0ZW31sWIaAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPG4YxL2tWTu9rVk//a1ZP/2tWT/9rVk//a1ZP32tGPD9rVkbvaz
        aBsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9bZlSfa1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1
        ZP/2tWT/9rVk/fa0Y8P2tWRu87ZhFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD2tGNV9rVk//a1ZP/2tWT/9rVk//a1
        ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWTy97ZlPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPSXIEfzlyLN85Yh+fOWIf/zliH/85Yh//SgN//2tWT/9rVk//a1
        ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWTRAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADzlSJq85Yh/vOWIf/zliH/85Yh//OWIf/zliH/9KA3//a1
        ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7pkiD/SWIfTzliH/85Yh//OWIf/zliH/85Yh//OW
        If/0oDf/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD0lyBH85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//SgN//2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1
        ZP/2tWT/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPOWIVXzliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/9KA3//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1
        ZP/2tWT/9rVk//a1ZP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA85YhVfOW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/0oDf/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1
        ZP/2tWT/9rVk//a1ZP/2tWT/9rVk/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADzlyMs85Yh8vOWIf/zliH/85Yh//OWIf/zliH/85Yh//SgN//2tWT/9rVk//a1ZP/2tWT/9rVk//a1
        ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADylSM685Yh8fOWIf/zliH/85Yh//OWIf/zliH/9KA3//a1ZP/2tWT/9rVk//a1
        ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACGeV4Ti3xg0Yt8YNGJfGInAAAAAAAAAADylSM685Yh8fOWIf/zliH/85Yh//OWIf/0oDf/9rVk//a1
        ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIx8YFCLfWD/i31g/4t9YOWJfGInAAAAAAAAAADylSM685Yh8vOWIf/zliH/85Yh//Sg
        N//2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAin5gVYt9YP+LfWD/i31g/4p9YOiMgGEqAAAAAAAAAADylSM685Yh8vOW
        If/zliH/9KA3//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1
        ZP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACKfmBVi31g/4t9YP+LfWD/i31g/4p9YOiMgGEqAAAAAAAA
        AADylyM785Yh8/OWIf/0oDf/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1
        ZP/2tWT/9rVk/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIp+YFWLfWD/i31g/4t9YP+LfWD/i31g/4p9
        YOiMgGEqAAAAAAAAAADzlyBY85Yh//SgN//2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1
        ZP/2tWT/9rVk//a1ZP/2tWT/i35hT4t9YKeMfWCqjH1gqox9YKqMfWCqi31hxot9YP+LfWD/i31g/4t9
        YP+LfWD/i31g/4t9YOaOgGMkAAAAAP//AAHzliHd9KA3//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1
        ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP+LfWDwi31g/4t9YP+LfWD/i31g/4t9YP+LfWD/i31g/4t9
        YP+LfWD/i31g/4t9YP+LfWD/i31g/4p9YZkAAAAAAAAAAPSWIbL0oDf/9rVk//a1ZP/2tWT/9rVk//a1
        ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk/4t8YJyLfWD8i31g/4t9YP+LfWD/i31g/4t9
        YP+LfWD/i31g/4t9YP+LfWD/i31g/4t9YP+LfWD9jHxgUgAAAAAAAAAA9JYhyPSgN//2tWT/9rVk//a1
        ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAin5gVYt9YP+LfWD/i31g/4t9YP+LfWD/i31g/ox9YGoAAAAAAAAAAPKUIibzliH89KA3//a1
        ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACKfmBVi31g/4t9YP+LfWD/i31g/4t9YP6MfWBqAAAAAAAAAADumSIP85YhzvOW
        If/0oDf/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIp+YFWLfWD/i31g/4t9YP+LfWD+jH1gagAAAAAAAAAA7pkiD/OW
        IcfzliH/85Yh//SgN//2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1
        ZP/2tWT/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAin5gVYt9YP+LfWD/i31g/op8YWkAAAAAAAAAAO6Z
        Ig/zliHH85Yh//OWIf/zliH/9KA3//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1
        ZP/2tWT/9rVk//a1ZP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIfV8ri31f+4t9YP2Lfl9jAAAAAAAA
        AADumSIP85Yhx/OWIf/zliH/85Yh//OWIf/0oDf/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1
        ZP/2tWT/9rVk//a1ZP/2tWT/9rVk/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIfV8riXxdKQAA
        AAAAAAAA7pkiD/OWIcfzliH/85Yh//OWIf/zliH/85Yh//SgN//2tWT/9rVk//a1ZP/2tWT/9rVk//a1
        ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAO+PIBD0liHI85Yh//OWIf/zliH/85Yh//OWIf/zliH/9KA3//a1ZP/2tWT/9rVk//a1
        ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA85YhVfOWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/0myz/9rVk//a1
        ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD0lyBH85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/1p0b/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO+PIBDzliHx85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zmy3/9KZF//WxW//2tWT/9rVk//a1ZP/2tWT/9rVk//a1ZP/2tWT/9rVk//a1
        ZPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPKWImHzliH+85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OcLv/0pkX/9bFb//a1ZP/2tWT/9rVk//a1
        ZP/2tWT/9rRkqwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPSV
        IEjzliHO85Yh+vOWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85wu//Sm
        Rf/1sFr/9bRi/vazYqzuu2YP///gf///wA///8AB///AAP/wAAD/4AAA/8AAAP/AAAD/wAAA/8AAAP/A
        AAD/4AAA/DAAAPwYAAD8DAAA/AYAAPwDAAAAAQAAAAGAAAABgAD8AwAA/AYAAPwMAAD8GAAA/DAAAP5g
        AAD/wAAA/8AAAP/AAAD/wAAA/+AAAP/wAAA=
</value>
  </data>
</root>